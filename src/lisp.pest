whitespace = _{ " " | "\t" | "\u{000C}" | "\r" | "\n" }

lparen = _{ "(" }
rparen = _{ ")" }

comment = _{ "#" ~ (!"\n" ~ any)* ~ "\n" }
letters = _{ 'A'..'Z' | 'a'..'z' }
exp     = _{ ("e" | "E") ~ ("+" | "-")? ~ ('1'..'9')+ }
hex     = _{ '0'..'9' | 'a'..'f' | 'A'..'F' }
unicode = _{ "u" ~ hex ~ hex ~ hex ~ hex }
escape  = _{ "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t" | unicode) }

op_true  = { "true" }
op_false = { "false" }
boolean  = _{ op_true | op_false }
int      = @{ "-"? ~ ("0" | '1'..'9' ~ '0'..'9'*) }
float    = @{
    "-"? ~
        (
            ('1'..'9')+ ~ exp |
            "0" ~ "." ~ ('0'..'9')+ ~ exp? |
            '1'..'9' ~ ('0'..'9')* ~ "." ~ ('0'..'9')+ ~ exp?
        )
}
string   = @{ "\"" ~ (escape | !("\"" | "\\") ~ any)* ~ "\"" }

ident  = @{ ("_" | letters) ~ ("_" | letters | ('0'..'9'))* }
literal = _{ float | int | string | boolean }
expr = { ident | sexp | literal }

sexp = { lparen ~ expr* ~ rparen }

program = { sexp* }
